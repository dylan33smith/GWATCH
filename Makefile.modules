# GWatch Module Database Management Makefile
# Specialized commands for managing module databases

.PHONY: help clean-modules check-db status backup-modules restore-modules

# Default target
help:
	@echo "GWatch Module Database Commands:"
	@echo ""
	@echo "Database Management:"
	@echo "  clean-modules     - Remove all module databases and start fresh"
	@echo "  check-db          - Check database connection and status"
	@echo "  status            - Show current module status"
	@echo "  backup-modules    - Create backup of all module databases"
	@echo "  restore-modules   - Restore module databases from backup"
	@echo ""
	@echo "Help:"
	@echo "  help              - Show this help message"

# Database Management
clean-modules:
	@echo "üßπ Cleaning all module databases..."
	@mysql -u gwatch_user -p123457 -e "SHOW DATABASES LIKE 'Module_%';" | grep -v "Database" | xargs -I {} mysql -u gwatch_user -p123457 -e "DROP DATABASE {};" 2>/dev/null || echo "No module databases found or error occurred"
	@mysql -u gwatch_user -p123457 gwatch_db -e "DELETE FROM module_tracking WHERE id > 0;" 2>/dev/null || echo "No module tracking entries found or error occurred"
	@echo "‚úÖ All module databases and tracking entries removed"

check-db:
	@echo "üîç Checking module database connections..."
	@echo "Main database (gwatch_db):"
	@mysql -u gwatch_user -p123457 -e "USE gwatch_db; SHOW TABLES;" 2>/dev/null || echo "‚ùå Main database connection failed"
	@echo ""
	@echo "Module databases:"
	@mysql -u gwatch_user -p123457 -e "SHOW DATABASES LIKE 'Module_%';" 2>/dev/null || echo "No module databases found"

status:
	@echo "üìä GWatch Module Status"
	@echo "======================="
	@echo "Database Status:"
	@mysql -u gwatch_user -p123457 -e "SELECT COUNT(*) as 'Total Modules' FROM gwatch_db.module_tracking;" 2>/dev/null || echo "‚ùå Database connection failed"
	@echo ""
	@echo "Module Databases:"
	@mysql -u gwatch_user -p123457 -e "SHOW DATABASES LIKE 'Module_%';" 2>/dev/null || echo "No module databases found"

# Advanced Operations
backup-modules:
	@echo "üíæ Creating backup of all module databases..."
	@mkdir -p backups/$(shell date +%Y%m%d_%H%M%S)
	@for db in $$(mysql -u gwatch_user -p123457 -e "SHOW DATABASES LIKE 'Module_%';" | grep -v "Database" | tr '\n' ' '); do \
		echo "Backing up $$db..."; \
		mysqldump -u gwatch_user -p123457 "$$db" > "backups/$(shell date +%Y%m%d_%H%M%S)/$$db.sql"; \
	done
	@echo "‚úÖ Module databases backed up"

restore-modules:
	@echo "‚ö†Ô∏è  WARNING: This will overwrite existing module databases!"
	@echo "Latest backup found:"
	@ls -la backups/ | tail -1 || echo "No backups found"
	@echo ""
	@read -p "Enter backup directory to restore from: " backup_dir; \
	if [ -d "backups/$$backup_dir" ]; then \
		for sql_file in backups/$$backup_dir/*.sql; do \
			db_name=$$(basename "$$sql_file" .sql); \
			echo "Restoring $$db_name..."; \
			mysql -u gwatch_user -p123457 < "$$sql_file"; \
		done; \
		echo "‚úÖ Module databases restored"; \
	else \
		echo "‚ùå Backup directory not found"; \
	fi
